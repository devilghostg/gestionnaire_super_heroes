{% extends 'base.html.twig' %}

{% block title %}Progression de la mission{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        #model3dContainer {
            width: 100%;
            height: 300px;
            background: linear-gradient(135deg, #1a1a1a 0%, #0a0a0a 100%);
            border-radius: 10px;
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block body %}
    {% if mission is null %}
        <div class="container mt-4">
            <div class="alert alert-warning">
                Mission non trouvée ou non accessible.
                <a href="{{ path('app_mission_index') }}" class="btn btn-primary">Retour à la liste</a>
            </div>
        </div>
    {% else %}
        <div class="container mt-4">
            <div class="card action-card">
                <div class="card-header">
                    <h1>{{ mission.title|default('Mission en cours') }}</h1>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-8">
                            <div class="progress" style="height: 25px;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                     role="progressbar" 
                                     style="width: 0%;" 
                                     aria-valuenow="0" 
                                     aria-valuemin="0" 
                                     aria-valuemax="100">0%</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="timer text-end">
                                <span id="missionTimer">5:00</span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <h4>Détails de la mission</h4>
                            <ul class="list-group">
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    Difficulté
                                    <span class="badge bg-primary">{{ mission.difficulty|default('N/A') }}</span>
                                </li>
                                <li class="list-group-item">
                                    <h5>Description</h5>
                                    <p>{{ mission.description|default('Aucune description disponible') }}</p>
                                </li>
                            </ul>
                        </div>

                        <div class="col-md-6">
                            <h4>Super-héros assigné</h4>
                            {% if mission.superHero %}
                                <div class="card">
                                    <div class="card-body">
                                        <h5 class="card-title">{{ mission.superHero.name|default('Sans nom') }}</h5>
                                        <p class="card-text">
                                            <strong>Alias :</strong> {{ mission.superHero.alias|default('Inconnu') }}<br>
                                            <strong>Niveau d'énergie :</strong> {{ mission.superHero.energy|default(0) }}
                                        </p>
                                    </div>
                                </div>
                                {% if mission.superHero.model3dPath %}
                                    <div id="model3dContainer"></div>
                                {% endif %}
                            {% else %}
                                <div class="alert alert-warning">
                                    Aucun super-héros n'est assigné à cette mission
                                </div>
                            {% endif %}
                        </div>
                    </div>

                    <div class="mt-4 text-center">
                        <form id="missionForm" method="post" class="d-inline">
                            <input type="hidden" name="_token" value="{{ csrf_token('complete_mission') }}">
                            <button type="submit" class="btn btn-success me-2" disabled>
                                <i class="bi bi-check-circle"></i> Terminer la mission
                            </button>
                        </form>

                        <form action="{{ path('app_mission_cancel', {'id': mission.id}) }}" method="post" class="d-inline">
                            <input type="hidden" name="_token" value="{{ csrf_token('cancel_mission') }}">
                            <button type="submit" class="btn btn-danger" onclick="return confirm('Êtes-vous sûr de vouloir annuler cette mission ?')">
                                <i class="bi bi-x-circle"></i> Annuler la mission
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script>
        document.addEventListener('DOMContentLoaded', function() {
            let progress = 0;
            const progressBar = document.querySelector('.progress-bar');
            const missionId = {{ mission.id|default('null') }};
            const startTime = new Date().getTime();
            const duration = {{ mission.timeLimit|default(300) }} * 1000; // Convert to milliseconds
            const completeButton = document.querySelector('button[type="submit"]');
            const missionForm = document.getElementById('missionForm');

            function updateProgress() {
                const currentTime = new Date().getTime();
                const elapsedTime = currentTime - startTime;
                progress = Math.min((elapsedTime / duration) * 100, 100);

                progressBar.style.width = progress + '%';
                progressBar.setAttribute('aria-valuenow', progress);
                progressBar.textContent = Math.round(progress) + '%';

                if (progress >= 100) {
                    completeButton.disabled = false;
                    return;
                }

                fetch('{{ path('app_mission_update_progress', {'id': mission.id}) }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        progress: progress
                    })
                });

                requestAnimationFrame(updateProgress);
            }

            function updateTimer() {
                const currentTime = new Date().getTime();
                const elapsedTime = currentTime - startTime;
                const remainingTime = Math.max(duration - elapsedTime, 0);
                
                const minutes = Math.floor(remainingTime / 60000);
                const seconds = Math.floor((remainingTime % 60000) / 1000);
                
                document.getElementById('missionTimer').textContent = 
                    minutes + ':' + (seconds < 10 ? '0' : '') + seconds;

                if (remainingTime > 0) {
                    requestAnimationFrame(updateTimer);
                }
            }

            if (missionId) {
                updateProgress();
                updateTimer();
            }

            if (missionForm) {
                missionForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    if (progress >= 100) {
                        fetch('{{ path('app_mission_complete', {'id': mission.id}) }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                window.location.href = '{{ path('app_mission_index') }}';
                            } else {
                                alert('Erreur lors de la complétion de la mission');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Une erreur est survenue');
                        });
                    }
                });
            }
        });
        </script>
    {% endif %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/loaders/GLTFLoader.js"></script>
    <script src="{{ asset('js/hero3d.js') }}"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            {% if mission.superHero.model3dPath %}
                new Hero3DViewer('model3dContainer', '{{ asset(mission.superHero.model3dPath) }}');
            {% endif %}
        });
    </script>
{% endblock %}
